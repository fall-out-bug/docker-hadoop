services:
  namenode:
    image: hadoop-namenode
    build:
      context: ./namenode
      dockerfile: Dockerfile
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode:
    image: hadoop-datanode
    build:
      context: ./datanode
      dockerfile: Dockerfile
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
  
  # datanode1:
  #   image: hadoop-datanode
  #   build:
  #     context: ./datanode
  #     dockerfile: Dockerfile
  #   container_name: datanode-1
  #   restart: always
  #   volumes:
  #     - hadoop_datanode-1:/hadoop/dfs/data
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9870"
  #   env_file:
  #     - ./hadoop.env
    
  # datanode2:
  #   image: hadoop-datanode
  #   build:
  #     context: ./datanode
  #     dockerfile: Dockerfile
  #   container_name: datanode-2
  #   restart: always
  #   volumes:
  #     - hadoop_datanode-2:/hadoop/dfs/data
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9870"
  #   env_file:
  #     - ./hadoop.env

  # datanode3:
  #   image: hadoop-datanode
  #   build:
  #     context: ./datanode
  #     dockerfile: Dockerfile
  #   container_name: datanode-3
  #   restart: always
  #   volumes:
  #     - hadoop_datanode-3:/hadoop/dfs/data
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9870"
  #   env_file:
  #     - ./hadoop.env
  
  resourcemanager:
    image: hadoop-resourcemanager
    build:
      context: ./resourcemanager
      dockerfile: Dockerfile
    container_name: resourcemanager
    restart: always
    ports:
      - 8088:8088
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager:
    image: hadoop-nodemanager
    build:
      context: ./nodemanager
      dockerfile: Dockerfile
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  # nodemanager1:
  #   image: hadoop-nodemanager
  #   build:
  #     context: ./nodemanager
  #     dockerfile: Dockerfile
  #   container_name: nodemanager-1
  #   restart: always
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode-1:9864 datanode-2:9864 datanode-3:9864 resourcemanager:8088"
  #   env_file:
  #     - ./hadoop.env

  # nodemanager2:
  #   image: hadoop-nodemanager
  #   build:
  #     context: ./nodemanager
  #     dockerfile: Dockerfile
  #   container_name: nodemanager-2
  #   restart: always
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode-1:9864 datanode-2:9864 datanode-3:9864 resourcemanager:8088"
  #   env_file:
  #     - ./hadoop.env

  # nodemanager3:
  #   image: hadoop-nodemanager
  #   build:
  #     context: ./nodemanager
  #     dockerfile: Dockerfile
  #   container_name: nodemanager-3
  #   restart: always
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode-1:9864 datanode-2:9864 datanode-3:9864 resourcemanager:8088"
  #   env_file:
  #     - ./hadoop.env
  
  historyserver:
    image: hadoop-historyserver
    build:
      context: ./historyserver
      dockerfile: Dockerfile
    container_name: historyserver
    restart: always
    ports:
      - 8188:8188
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env


  hive:
    image: hadoop-hive
    # image: hadoop-base
    build:
      context: ./hive
      # context: ./base
      dockerfile: Dockerfile
    container_name: hive-server
    depends_on:
      namenode:
        condition: service_healthy
      resourcemanager:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - HIVE_METASTORE_DB_TYPE=postgres
      - HIVE_METASTORE_HOST=postgres
      - HIVE_METASTORE_PORT=5432
      - HIVE_METASTORE_DB=metastore
      - HIVE_METASTORE_USER=hiveuser
      - HIVE_METASTORE_PASSWORD=hivepassword
    ports:
      - "10000:10000"  # Hive Thrift Server
    volumes:
      - hive-data:/opt/hive/data
      - hive-logs:/opt/hive/logs
    env_file:
      - ./hadoop.env

  postgres:
    image: postgres:13
    container_name: hive-postgres
    environment:
      POSTGRES_USER: hiveuser
      POSTGRES_PASSWORD: hivepassword
      POSTGRES_DB: metastore
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - ./hadoop.env
 
  
volumes:
  hadoop_namenode:
  hadoop_datanode:
  # hadoop_datanode-1:
  # hadoop_datanode-2:
  # hadoop_datanode-3:
  hadoop_historyserver:
  hive-data:
  hive-logs:
  postgres-data:
